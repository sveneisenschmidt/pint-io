#!/usr/bin/env php
<?php
namespace pint;

$path = realpath(__DIR__ . '/..');
require "$path/lib/SplClassLoader.php";

$loader = new \SplClassLoader("pint", "$path/lib");
$loader->register();

$file = isset($_SERVER["argv"][1]) ? realpath($_SERVER["argv"][1]) : null;
if (empty($file)) {
    die("Please pass a config file.\n");
}
$server = Server::fromAppFile($file);

if(!isset($_ENV["PINT_ENV"]) || empty($_ENV["PINT_ENV"])) {
    $_ENV["PINT_ENV"] = "development";
}
if(!isset($_ENV["PINT_DIR"]) || empty($_ENV["PINT_DIR"])) {
    define('__PINT_DIR__', $path);
}
if(!extension_loaded('http')) {
    throw new Exception('Extension pecl_http is not enabled.');
}

$maxtries = $tries = $server->configVar('startup_tries');
start:

try {
    $server->start($_ENV["PINT_ENV"]);
} catch(\Exception $exception) {
    
    if($exception instanceof \pint\Socket\InvalidResourceException ||
       $exception instanceof \pint\Server\StillRunningException    
    ) {
        if($tries  <= 0) {
            print "Shutting down. pint.IO could not start. ({$tries} tries left) \r\n";
            die();
    
        } else { 
            $tries--;
            
            if($exception instanceof \pint\Server\StillRunningException) {
                print "Problem: a pint.IO instance is still running or not shutdown. \r\n";
            }
            if($exception instanceof \pint\Server\InvalidResourceException) {
                print "oint.IO could not connect to th specified socket (adress + port). \r\n";
            }
                
            print "Trying it again in 1s. ({$tries} tries left). \r\n\r\n";
            
            if($tries > $maxtries -1) {
                print "- Please check if pint.IO is already running and bound to a port. \r\n" .
                      "- This could also happen when another pint.IO server is still shutting down. \r\n\r\n";
            } else {
                print "-- \r\n\r\n";
            }
            
            sleep(1);
            goto start; 
        }  
    }
    
    throw $exception;
}

